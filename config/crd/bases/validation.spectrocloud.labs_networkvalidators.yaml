---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: networkvalidators.validation.spectrocloud.labs
spec:
  group: validation.spectrocloud.labs
  names:
    kind: NetworkValidator
    listKind: NetworkValidatorList
    plural: networkvalidators
    singular: networkvalidator
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NetworkValidator is the Schema for the networkvalidators API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NetworkValidatorSpec defines the desired state of NetworkValidator
            properties:
              dnsRules:
                description: DNSRules validate DNS name resolution of network hosts
                items:
                  description: DNSRule defines a DNS validation rule.
                  properties:
                    host:
                      type: string
                    name:
                      description: RuleName is a unique identifier for the rule in
                        the validator. Used to ensure conditions do not overwrite
                        each other.
                      maxLength: 500
                      type: string
                    server:
                      type: string
                  required:
                  - host
                  - name
                  type: object
                maxItems: 5
                type: array
                x-kubernetes-validations:
                - message: DNSRules must have unique names
                  rule: self.all(e, size(self.filter(x, x.name == e.name)) == 1)
              httpFileRules:
                description: HTTPFileRules validate that files are publicly available
                  via HTTP
                items:
                  description: HTTPFileRule defines an HTTP file rule.
                  properties:
                    name:
                      description: RuleName is a unique identifier for the rule in
                        the validator. Used to ensure conditions do not overwrite
                        each other.
                      maxLength: 500
                      type: string
                    paths:
                      description: Paths is a list of file paths to check. When performing
                        HTTP requests, if any of the paths result in a non-200 OK
                        response code, the rule fails validation.
                      items:
                        type: string
                      maxItems: 1000
                      type: array
                  required:
                  - name
                  - paths
                  type: object
                maxItems: 5
                type: array
                x-kubernetes-validations:
                - message: HTTPFileRules must have unique names
                  rule: self.all(e, size(self.filter(x, x.name == e.name)) == 1)
              icmpRules:
                description: ICMPRules validate ICMP pings to network hosts
                items:
                  description: ICMPRule defines an ICMP validation rule.
                  properties:
                    host:
                      type: string
                    name:
                      description: RuleName is a unique identifier for the rule in
                        the validator. Used to ensure conditions do not overwrite
                        each other.
                      maxLength: 500
                      type: string
                  required:
                  - host
                  - name
                  type: object
                maxItems: 5
                type: array
                x-kubernetes-validations:
                - message: ICMPRules must have unique names
                  rule: self.all(e, size(self.filter(x, x.name == e.name)) == 1)
              ipRangeRules:
                description: IPRangeRules validate that all IPs in a given CIDR range
                  are free (unallocated)
                items:
                  description: IPRangeRule defines an IP range validation rule.
                  properties:
                    length:
                      type: integer
                    name:
                      description: RuleName is a unique identifier for the rule in
                        the validator. Used to ensure conditions do not overwrite
                        each other.
                      maxLength: 500
                      type: string
                    startIp:
                      type: string
                  required:
                  - length
                  - name
                  - startIp
                  type: object
                maxItems: 5
                type: array
                x-kubernetes-validations:
                - message: IPRangeRules must have unique names
                  rule: self.all(e, size(self.filter(x, x.name == e.name)) == 1)
              mtuRules:
                description: MTURules validate that the default NIC has an MTU of
                  at least X, where X is the provided MTU
                items:
                  description: MTURule defines an MTU validation rule.
                  properties:
                    host:
                      type: string
                    mtu:
                      type: integer
                    name:
                      description: RuleName is a unique identifier for the rule in
                        the validator. Used to ensure conditions do not overwrite
                        each other.
                      maxLength: 500
                      type: string
                    packetHeadersSize:
                      description: |-
                        Optionally specify the size in bytes of the packet headers for the MTU ping packet.
                        This varies by medium, e.g. Ethernet, WiFi, etc.) and defaults to 28 bytes
                        (20 bytes IP header + 8 bytes ICMP header)
                      type: integer
                  required:
                  - host
                  - mtu
                  - name
                  type: object
                maxItems: 5
                type: array
                x-kubernetes-validations:
                - message: MTURules must have unique names
                  rule: self.all(e, size(self.filter(x, x.name == e.name)) == 1)
              tcpConnRules:
                description: TCPConnRules validate arbitrary TCP connections, including
                  proxied connections
                items:
                  description: TCPConnRule defines a TCP connection validation rule.
                  properties:
                    host:
                      type: string
                    name:
                      description: RuleName is a unique identifier for the rule in
                        the validator. Used to ensure conditions do not overwrite
                        each other.
                      maxLength: 500
                      type: string
                    ports:
                      items:
                        type: integer
                      type: array
                    proxyAddress:
                      type: string
                    proxyPort:
                      type: integer
                    proxyProtocol:
                      pattern: ^(4|5|connect)?$
                      type: string
                  required:
                  - host
                  - name
                  - ports
                  type: object
                maxItems: 5
                type: array
                x-kubernetes-validations:
                - message: TCPConnRules must have unique names
                  rule: self.all(e, size(self.filter(x, x.name == e.name)) == 1)
            type: object
          status:
            description: NetworkValidatorStatus defines the observed state of NetworkValidator
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
